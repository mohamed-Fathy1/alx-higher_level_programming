The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

First import ``add_integer`` from the ``0-add_integer`` module. Since the file name contains a numeral, you can't use the simple ``from 0-add_integer import add_integer``. You can instead use the following syntax:

    >>> add_integer = __import__('0-add_integer').add_integer

Numbers:
=======
    >>> add_integer(1, 2)
    3

Negative Numbers:
================
    >>> add_integer(-1, 3)
    2
    >>> add_integer(-1, -3)
    -4

floating Numbers:
================
    >>> add_integer(5.87, 3.45)
    8

Negative & floating Numbers:
===========================
    >>> add_integer(-5.87, -3.45)
    -8

Strings:
================
    >>> add_integer(3, "addd")
    Traceback (most recent call last):
    TypeError: b must be an integer
    >>> add_integer("str", 1)
    Traceback (most recent call last):
    TypeError: a must be an integer
    >>> add_integer("str", "abb")
    Traceback (most recent call last):
    TypeError: a must be an integer

SyntaxError:
===============
    >>> add_integer(, 3)
    Traceback (most recent call last):
    SyntaxError: invalid syntax

No argument:
===============
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

one argument:
===============
    >>> add_integer(4)
    102

OverflowError:
==============
    >>> pos_inf = float('inf')  # positive infinity
    >>> add_integer(pos_inf, 4.0)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> neg_inf = float('-inf')  # negative infinity
    >>> add_integer(neg_inf, 4.0)
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

NaN:
====
    >>> not_a_num = float('nan')   # NaN ("not a number", )
    >>> add_integer(not_a_num, 4.0)
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

