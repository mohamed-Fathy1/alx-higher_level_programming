The ``2-matrix_divided.py`` module
==================================

Using ``matrix_divided``
------------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module. Since the file name contains a numeral, you can't use the simple ``from 2-matrix_divided import matrix_divided``. You can instead use the following syntax:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided



    >>> matrix = []
    >>> matrix_divided(matrix, 3)
    []

    >>> matrix = [1, 2, 3]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [ [], [], [] ]
    >>> matrix_divided(matrix, 3)
    [[], [], []]

    >>> matrix = [ [1, '2', 3], [4, 5, ()] ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [ [1, 2, 3], [4, 5, 6, 7] ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size


    >>> matrix = [ [1, 2, 3], [4, 5, 6] ]
    >>> matrix_divided(matrix, '3')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> matrix = (1, 2, 3)
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [ [1, 2, 3], [4, 5, 6] ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


    >>> matrix = [ [1, 2.2, 3], [4.1, 5.1, 6] ]
    >>> print(matrix_divided(matrix, 3.14159))
    [[0.32, 0.7, 0.95], [1.31, 1.62, 1.91]]

